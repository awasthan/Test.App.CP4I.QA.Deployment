// @Author: Anand Awasthi (anand.awasthi@in.ibm.com)

timestamps {

node () {

wrap([$class: 'Xvfb']) {
	stage ('Test.App.CP4I.QA.Deployment - Checkout') {
 	 checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'jenkins-github', url: 'https://github.com/awasthan/Test.App.CP4I.QA.Deployment.git']]]) 
	}
	stage ('Test.App.CP4I.QA.Deployment - Build') {
artifactResolver artifacts: [artifact(artifactId: '${ACE_APP1}', extension: 'zip', groupId: 'com.ibm.esb', version: '${ACE_APP1_VERSION}'), artifact(artifactId: '${ACE_APP2}', extension: 'zip', groupId: 'com.ibm.esb', version: '${ACE_APP2_VERSION}')], targetDirectory: '/var/icp-builds/${ACE_APP1}' 	
sh label: '', script: '''#!/bin/sh
cd /var/icp-builds/${ACE_APP1}
unzip ${ACE_APP1}-${ACE_APP1_VERSION}.zip
chmod 777 *
cp ${ACE_APP1}_QA_${ACE_APP1_VERSION}.bar /var/lib/jenkins/jobs/${JOB_NAME}/workspace
unzip ${ACE_APP2}-${ACE_APP2_VERSION}.zip
chmod 777 *
cp ${ACE_APP2}_QA_${ACE_APP2_VERSION}.bar /var/lib/jenkins/jobs/${JOB_NAME}/workspace
cd ${WORKSPACE}
#oc login ${OCP_API_URL} -u admin -p ${REGISTRY_PASSWORD} --insecure-skip-tls-verify
cloudctl login -a ${ICP_CONSOLE_URL} -n ${Namespace} -u ${CP4I_User} -p ${CP4I_Password} â€“-skip-ssl-validation
oc project ${Namespace}
docker login cp.icr.io -u ${ICR_USER} -p ${ICR_PASSWORD}
docker build -t ${imagename}:${BUILD_NUMBER} .
docker tag ${imagename}:${BUILD_NUMBER} ${targetrepo}/${imagename}:${tag}-amd64
docker login ${OCP_Registry_External_URL} -u $(oc whoami) -p $(oc whoami -t)
docker push ${targetrepo}/${imagename}:${tag}-amd64
source /etc/profile
cd /opt/certs
helm init --client-only
helm repo add local-charts --ca-file ${HELM_CERT_FILE_NAME} ${ICP_CONSOLE_URL}:443/helm-repo/charts
if test ${DeploymentType} = \'install\'; then
helm ${DeploymentType} --name $ReleaseName local-charts/ibm-ace-server-icp4i-prod --version v3.1.0 --namespace ${Namespace} --set imageType=ace --set image.aceonly=${OCP_Registry_Internal_URL}/${Namespace}/${imagename}:${tag} --set image.acemqclient=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-mqclient-server-prod:11.0.0.8-r1 --set image.acemq=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-mq-server-prod:11.0.0.8-r1 --set image.configurator=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-icp-configurator-prod:11.0.0.8-r1 --set image.designerflows=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-designer-flows-prod:11.0.0.8-r1 --set image.pullSecret=${IMAGE_PULL_SECRET} --set persistence.enabled=false --set persistence.useDynamicProvisioning=false --set integrationServer.name=${IntegrationServerName} --set integrationServer.configurationSecret=${ReleaseName}-secret --set integrationServer.truststoreCertNames=mykey --set aceonly.replicaCount=1 --set odTracingConfig.enabled=true --set odTracingConfig.odAgentImageRepository=${OCP_Registry_Internal_URL}/${Namespace}/icp4i-od-agent --set odTracingConfig.odAgentImageTag=1.0.2 --set odTracingConfig.odCollectorImageRepository=${OCP_Registry_Internal_URL}/${Namespace}/icp4i-od-collector --set odTracingConfig.odCollectorImageTag=1.0.2 --set odTracingConfig.odTracingNamespace=tracing --set license=accept --tls
oc project ${Namespace}
#oc expose svc ${ReleaseName}-ibm-ace-server-icp4i-prod --port=7800
oc autoscale deployment/${ReleaseName}-ibm-ace-server-icp4i-prod --min 2 --max 4 --cpu-percent=25
else
helm ${DeploymentType} $ReleaseName local-charts/ibm-ace-server-icp4i-prod --version v3.1.0 --namespace ${Namespace} --set imageType=ace --set image.aceonly=${OCP_Registry_Internal_URL}/${Namespace}/${imagename}:${tag} --set image.acemqclient=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-mqclient-server-prod:11.0.0.8-r1 --set image.acemq=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-mq-server-prod:11.0.0.8-r1 --set image.configurator=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-icp-configurator-prod:11.0.0.8-r1 --set image.designerflows=${OCP_Registry_Internal_URL}/${Namespace}/ibm-ace-designer-flows-prod:11.0.0.8-r1 --set image.pullSecret=${IMAGE_PULL_SECRET} --set persistence.enabled=false --set persistence.useDynamicProvisioning=false --set integrationServer.name=${IntegrationServerName} --set integrationServer.configurationSecret=${ReleaseName}-secret --set integrationServer.truststoreCertNames=mykey --set aceonly.replicaCount=1 --set odTracingConfig.enabled=true --set odTracingConfig.odAgentImageRepository=${OCP_Registry_Internal_URL}/${Namespace}/icp4i-od-agent --set odTracingConfig.odAgentImageTag=1.0.2 --set odTracingConfig.odCollectorImageRepository=${OCP_Registry_Internal_URL}/${Namespace}/icp4i-od-collector --set odTracingConfig.odCollectorImageTag=1.0.2 --set odTracingConfig.odTracingNamespace=tracing --set license=accept --tls
fi
cd /var/icp-builds
rm -rf ${ACE_APP1}
rm -rf ${ACE_APP2}''' 
	}
}
cleanWs()
}
}
